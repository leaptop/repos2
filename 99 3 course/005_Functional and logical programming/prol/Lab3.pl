% целевой предикат
goal:- write('Введите имя входного файла  > '), read(Ф1), exists_file(Ф1),
       write('Введите имя выходного файла > '), read(Ф2),
       open(Ф1, read, П1), open(Ф2, write, П2),
       repeat, вводстроки(П1, С), выводстроки(П2, С), at_end_of_stream(П1),
       close(П1), close(П2), writeln('Выходной текст записан'), !.
goal:- writeln('Файл не найден'),!.

вводстроки(П, С):- read_line_to_codes(П, Симв), atom_chars(Стр, Симв),
                   atomic_list_concat(С1, ' ', Стр), удалить(С1, [], С).

выводстроки(П, С):- числослов(С, ЧСл), числосимволов(С, ЧС1), ЧСл > 1,
                    ЧП is ЧСл - 1, ЧС2 is ЧС1 + ЧП, ЧС is 40 - ЧС2,
                    ЧП1 is div(ЧС, ЧП), ЧП2 is mod(ЧС, ЧП),
                    выводслова(П, С, ЧП1, ЧП2).
выводстроки(П, С):- числослов(С, ЧСл), числосимволов(С,_), ЧСл < 2,
                    выводслова(П, С, 0, 0).

выводслова(П, [], _, _):- nl(П).
выводслова(П, [Г | Х], ЧП1, ЧП2):- not(Х = []), write(П, Г), write(П, ' '),
                                   ЧП3 is ЧП2 - 1, выводпробелов(П, ЧП1),
                                   выводдополнительногопробела(П, ЧП2),
                                   выводслова(П, Х, ЧП1, ЧП3).
выводслова(П, [Г | Х], _, _):- Х = [], write(П, Г), nl(П).

выводпробелов(_, ЧП):- ЧП < 1.
выводпробелов(П, ЧП):- ЧП > 0, write(П, ' '), ЧП1 is ЧП - 1, выводпробелов(П, ЧП1).

выводдополнительногопробела(_, ЧП):- ЧП < 1.
выводдополнительногопробела(П, ЧП):- ЧП > 0, write(П, ' ').

удалить([], С, С).
удалить([Г | Х], С, С2):- string_length(Г, Д), Д > 0, append(С, [Г], С1),
                          удалить(Х, С1, С2).
удалить([Г | Х], С, С2):- string_length(Г, Д), Д =:= 0, удалить(Х, С, С2).

числослов([], 0).
числослов([_ | Х], Ч1):- числослов(Х, Ч), Ч1 is Ч + 1.

числосимволов([], 0).
числосимволов([Г | Х], Ч1):- числосимволов(Х, Ч), string_length(Г, Д), Ч1 is Ч + Д.