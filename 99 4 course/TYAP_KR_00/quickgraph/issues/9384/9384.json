{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "algorithms",
      "DisplayName": "algorithms"
    },
    "ClosedComment": "",
    "ClosedDate": "2008-08-25T10:13:52.57-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Hi, I have downloaded the source file 15206 and tried to use the Dijkstra algorithm to get shortest route.\n \nI have created a simple program, it works great.\n \nHowever, I found a case where the algorithm gave me wrong route A -> B - > E , where the correct route should be A -> C -> D -> E, as tested from \nhttp://www.dgp.toronto.edu/people/JamesStewart/270/9798s/Laffra/DijkstraApplet.html\n \nI have attach the snap shot from http://www.dgp.toronto.edu/people/JamesStewart/270/9798s/Laffra/DijkstraApplet.html and the\nsimple program i tested. \n \n \nPlease advice.\nThankyou.",
    "LastUpdatedDate": "2013-05-16T04:59:29.963-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "High",
      "Severity": 150,
      "Id": 3
    },
    "ProjectName": "quickgraph",
    "ReportedDate": "2008-02-20T00:01:44.96-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Wrong path from Dijkstra algorithm",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 5,
    "Id": 9384
  },
  "FileAttachments": [
    {
      "FileId": 751,
      "FileName": "Program.cs",
      "DownloadUrl": ".\\751"
    },
    {
      "FileId": 752,
      "FileName": "ShortestRoute.jpg",
      "DownloadUrl": ".\\752"
    }
  ],
  "Comments": [
    {
      "Message": "Here is the snap shot from http://www.dgp.toronto.edu/people/JamesStewart/270/9798s/Laffra/DijkstraApplet.html",
      "PostedDate": "2008-02-20T00:02:58.553-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2008-02-20T00:02:58.82-08:00",
      "Id": -2147483648
    },
    {
      "Message": "I think the impact of this bug should be set to High. Dijstra is quite a key algorithm and pretty basic. Fix below.\r\n \r\nDijkstraShortestPathAlgorithm uses an instance BreadthFirstSearchAlgorithm with a priorised queue (PriorithizedVertexBuffer) instead of a simple non-prioritised one.\r\n  \r\nPriorithizedVertexBuffer reimplements the VertexBuffer.Push method to keep the buffer sorted at all times. However, VertexBuffer.Push is a non-virtual method. To get around this, the PriorithizedVertexBuffer uses the \"new\" modifier. This is incorrect.\r\n  \r\nThere are two ways to fix this problem.\r\n \r\nThe first method is the most straightforward:\r\n- Make VertexBuffer<TVertex>.Push a virtual method\r\n- Change the modified on PriorithizedVertexBuffer<TVertex, TDistance>.Push from \"new\" to \"override\"\r\n\r\nThe second method might fit in better architectually, but I am not familiar enough with this library to judge this: the type of queue could be made a template parameter of the BreadthFirstSearchAlgorithm type.",
      "PostedDate": "2008-05-07T18:38:59.05-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2008-05-07T18:40:07.473-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2008-05-13T19:52:36.91-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2008-06-10T14:29:10.797-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2008-07-17T10:55:05.053-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2008-08-25T08:57:58.66-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Resolved with changeset 22313.",
      "PostedDate": "2008-08-25T10:13:52.57-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2008-08-26T08:57:45.467-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2008-12-31T07:17:05.823-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T17:44:58.25-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T04:59:29.963-07:00",
      "Id": -2147483648
    }
  ]
}