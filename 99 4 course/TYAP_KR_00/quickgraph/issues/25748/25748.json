{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "The following code produces a max flow of 4 when I believe the correct value should be 5. Can anyone confirm that this is indeed a QuickGraph issue?\n\nThe graph is taken from [http://en.wikipedia.org/wiki/Edmonds%E2%80%93Karp_algorithm ](http://en.wikipedia.org/wiki/Edmonds%E2%80%93Karp_algorithm)\n\n```\n        private static void TestMaximumFlowEdmondsKarp()\n        {\n            //Graph taken from http://en.wikipedia.org/wiki/Edmonds%E2%80%93Karp_algorithm \n\n            //We need a graph, a source and a sink\n            IMutableVertexAndEdgeListGraph<string, SEdge<string>> graph = new AdjacencyGraph<string, SEdge<string>>(true);\n\n            //Add some vertices to the graph\n            graph.AddVertex(\"A\");\n            graph.AddVertex(\"B\");\n            graph.AddVertex(\"C\");\n            graph.AddVertex(\"D\");\n            graph.AddVertex(\"E\");\n            graph.AddVertex(\"F\");\n            graph.AddVertex(\"G\");\n\n            // Create the edges\n            SEdge<string> a_b = new SEdge<string>(\"A\", \"B\");\n            SEdge<string> a_d = new SEdge<string>(\"A\", \"D\");\n            SEdge<string> b_c = new SEdge<string>(\"B\", \"C\");\n            SEdge<string> c_a = new SEdge<string>(\"C\", \"A\");\n            SEdge<string> c_d = new SEdge<string>(\"C\", \"D\");\n            SEdge<string> c_e = new SEdge<string>(\"C\", \"E\");\n            SEdge<string> d_e = new SEdge<string>(\"D\", \"E\");\n            SEdge<string> d_f = new SEdge<string>(\"D\", \"F\");\n            SEdge<string> e_b = new SEdge<string>(\"E\", \"B\");\n            SEdge<string> e_g = new SEdge<string>(\"E\", \"G\");\n            SEdge<string> f_g = new SEdge<string>(\"F\", \"G\");\n\n            // Add the edges\n            graph.AddEdge(a_b);\n            graph.AddEdge(a_d);\n            graph.AddEdge(b_c);\n            graph.AddEdge(c_a);\n            graph.AddEdge(c_d);\n            graph.AddEdge(c_e);\n            graph.AddEdge(d_e);\n            graph.AddEdge(d_f);\n            graph.AddEdge(e_b);\n            graph.AddEdge(e_g);\n            graph.AddEdge(f_g);\n\n            // Define some weights to the edges\n            Dictionary<SEdge<string>, double> edgeCapacityDictionary = new Dictionary<SEdge<string>, double>(graph.EdgeCount);\n            edgeCapacityDictionary.Add(a_b, 3);\n            edgeCapacityDictionary.Add(a_d, 3);\n            edgeCapacityDictionary.Add(b_c, 4);\n            edgeCapacityDictionary.Add(c_a, 3);\n            edgeCapacityDictionary.Add(c_d, 1);\n            edgeCapacityDictionary.Add(c_e, 2);\n            edgeCapacityDictionary.Add(d_e, 2);\n            edgeCapacityDictionary.Add(d_f, 6);\n            edgeCapacityDictionary.Add(e_b, 1);\n            edgeCapacityDictionary.Add(e_g, 1);\n            edgeCapacityDictionary.Add(f_g, 9);\n\n            //A function which maps an edge to its capacity\n            Func<SEdge<string>, double> edgeCapacity = AlgorithmExtensions.GetIndexer(edgeCapacityDictionary);\n\n            //A function which takes a vertex and returns the edge connecting to its predecessor in the flow network\n            TryFunc<string, SEdge<string>> flowPredecessors;\n\n            //A function used to create new edges during the execution of the algorithm. These edges are removed before the computation returns\n            EdgeFactory<string, SEdge<string>> edgeFactory = (source, target) => new SEdge<string>(source, target);\n\n            var flow = graph.MaximumFlowEdmondsKarp(\n                edgeCapacity,\n                \"A\",\n                \"G\",\n                out flowPredecessors,\n                edgeFactory);\n\n            Console.WriteLine(\"The MaximumFlowEdmondsKarp result is {0}\", flow);\n        }\n```",
    "LastUpdatedDate": "2014-09-25T10:06:50.96-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "quickgraph",
    "ReportedDate": "2014-09-25T10:05:36.84-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Is MaximumFlowEdmondsKarp Broken?",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 25748
  },
  "FileAttachments": [],
  "Comments": []
}