[
  {
    "Id": "150971",
    "ThreadId": "45275",
    "Html": "Hi,<br>\r\n<br>\r\nI want to keep an eye on the connectivity of my graph when adding nodes and edges. So I call the method StronglyConnectedComponents many times. The code looks like this:<br>\r\n<br>\r\n<span style=\"font-size:13px;color:#0000ff\">\r\n<p>int</p>\r\n</span>\r\n<p><span style=\"font-size:13px\">componentCount = _QRoadmap.StronglyConnectedComponents&lt;</span><span style=\"font-size:13px;color:#2b91af\">RoadmapNode</span><span style=\"font-size:13px\">,</span><span style=\"font-size:13px;color:#2b91af\">TaggedEdge</span><span style=\"font-size:13px\">&lt;</span><span style=\"font-size:13px;color:#2b91af\">RoadmapNode</span><span style=\"font-size:13px\">,</span><span style=\"font-size:13px;color:#0000ff\">double</span><span style=\"font-size:13px\">&gt;&gt;(</span><span style=\"font-size:13px;color:#0000ff\">out</span><span style=\"font-size:13px\"> components);<br>\r\n<br>\r\nIs there a way to do this more efficiently ?<br>\r\n<br>\r\nRegards,<br>\r\nStephan\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2009-01-26T08:14:57.863-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "151407",
    "ThreadId": "45275",
    "Html": "Is the graph growing, i.e. only edge added, or some edges are removed as well. This is an important details on which algorithm to use. <br>\r\n<br>\r\nQuickGraph already has a disjointset datastructure, which is the building block of incremental connected components (<a href=\"http://www.boost.org/doc/libs/1_37_0/libs/graph/doc/incremental_components.html\">http://www.boost.org/doc/libs/1_37_0/libs/graph/doc/incremental_components.html</a>).\r\n",
    "PostedDate": "2009-01-27T09:12:11.497-08:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "151469",
    "ThreadId": "45275",
    "Html": "Added a (untested) incremental component algorithm. Use <br>\r\n<br>\r\n    // key = component count, value = vertex =&gt; component indexmap<br>\r\n    Func&lt;KeyValuePair&lt;int, IDictionary&lt;TVertex,int&gt;&gt;&gt; computeComponents = AlgorithmExtensions.IncrementalComponents(g);<br>\r\n    ...<br>\r\n    var components = computeComponents();<br>\r\n        \r\n",
    "PostedDate": "2009-01-27T11:30:07.957-08:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "151638",
    "ThreadId": "45275",
    "Html": "Great I think this will suit my requirements very well. <br>\r\nBecause I am only adding new Edges and myvbe some Vertices and I don't remove edges.<br>\r\nSo I will try your incremental extension.<br>\r\n<br>\r\n",
    "PostedDate": "2009-01-28T00:03:27.707-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "151724",
    "ThreadId": "45275",
    "Html": "I tried your incremental algorithm and I get not what I thought I should get.<br>\r\nI have a graph with 500 vertices and no edges. When I call the Compute()-Method it returns a key-value-pair with the key=499.<br>\r\nThe value is a dictionary with my 500 vertices as the keys and all the values set to 0. <br>\r\nSo it seems like the graph consists of on connected component instead of 500 connected components...\r\n",
    "PostedDate": "2009-01-28T05:07:50.553-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "152017",
    "ThreadId": "45275",
    "Html": "Ooops. Forgot to update the index. Should work now, but still needs tests.\r\n",
    "PostedDate": "2009-01-28T18:01:52.483-08:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  }
]