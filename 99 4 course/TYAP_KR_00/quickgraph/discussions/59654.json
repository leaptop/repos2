[
  {
    "Id": "201977",
    "ThreadId": "59654",
    "Html": "<p>Does anybody have any experience in loading QuickGraph objects with data from Entity Framework, or in using LINQ with QuickGraph?&nbsp; Any sample code floating around?&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-06-16T04:37:03.69-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "202395",
    "ThreadId": "59654",
    "Html": "<p>Could you clarify what you have in mind? Are you looking to map the entity schema to a graph? All data structures in QuickGraph are generic, so you should be able to define TVertex as your entity and pick a default edge implementation such as Edge&lt;T&gt;, SEdge&lt;T&gt;, etc...</p>",
    "PostedDate": "2009-06-17T02:56:46.853-07:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "204080",
    "ThreadId": "59654",
    "Html": "<div>Well, let me back up a bit.  I have two tables in a database: Vertices (which has an integer ID, and some attributes) and DirectedEdges (which has a FromVertex and ToVertex, as integer IDs).</div>\r\n<div> </div>\r\n<div>I'm trying to find the most effective ways to get this data into a graph.  It occurred to me that some of the newer .NET 3.0/3.5/4.0 features (like LINQ, and EF4) might be useful in this regard, but I'd rather not reinvent the wheel, so I was wondering if anyone had played around in this arena. (It might well be that there are easier ways to load up the graph, using other technologies-- in which case, I'd be interested in hearing about those, too.)<br>\r\n<br></div>\r\n<div>On Wed, Jun 17, 2009 at 11:56 AM, pelikhan <span dir=ltr>&lt;<a href=\"mailto:notifications@codeplex.com\">notifications@codeplex.com</a>&gt;</span> wrote:<br>\r\n<blockquote style=\"border-left:#ccc 1px solid;margin:0px 0px 0px 0.8ex;padding-left:1ex\">\r\n<div>\r\n<p>From: pelikhan</p>\r\n<div>\r\n<p>Could you clarify what you have in mind? Are you looking to map the entity schema to a graph? All data structures in QuickGraph are generic, so you should be able to define TVertex as your entity and pick a default edge implementation such as Edge&lt;T&gt;, SEdge&lt;T&gt;, etc...</p>\r\n</div>\r\n<div>\r\n<div> </div></div></div></blockquote></div>",
    "PostedDate": "2009-06-22T08:04:08.803-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "204097",
    "ThreadId": "59654",
    "Html": "<p>You do not need linq to do this. You can either enumerate all the edges in your project and add them as you go in the graph (btw, do you plan to store the entities or just the IDs in the graph?).</p>\r\n<p>Another way is to use the delegate-based graphs (you'll need to build from sources). These are graph implementation based on delegate, thus very flexible. You can instantiate a DelegateVertexAndEdgeListGraph and provide 2 delegates: one that returns a IEnumerable&lt;TVertex&gt;, and a delegate that returns out-edges given a vertex.</p>\r\n<p><span style=\"color:#2b91af;font-size:x-small\"></span></p>",
    "PostedDate": "2009-06-22T09:10:15.207-07:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "204129",
    "ThreadId": "59654",
    "Html": "<div>The reason I thought LINQ might be attractive is that I have 59 million edges, so I was thinking of using LINQ to just return certain subsets instead of always dealing with the entire graph.</div>\r\n<div> </div>\r\n<div>I wasn't sure about storing anything besides the IDs-- there are a few attributes of the vertices that might be useful, but there are 6 million vertices, so I'm trying to keep things fairly minimal.</div>\r\n<div> </div>\r\n<div>Have you thought about adding some sample code to the site to demonstrate loading a graph from a database, and/or the use of delegate-based graphs?<br><br></div>\r\n<div>On Mon, Jun 22, 2009 at 6:10 PM, pelikhan <span dir=ltr>&lt;<a href=\"mailto:notifications@codeplex.com\">notifications@codeplex.com</a>&gt;</span> wrote:<br>\r\n<blockquote style=\"border-left:#ccc 1px solid;margin:0px 0px 0px 0.8ex;padding-left:1ex\">\r\n<div>\r\n<p>From: pelikhan</p>\r\n<div>\r\n<p>You do not need linq to do this. You can either enumerate all the edges in your project and add them as you go in the graph (btw, do you plan to store the entities or just the IDs in the graph?).</p>\r\n<p>Another way is to use the delegate-based graphs (you'll need to build from sources). These are graph implementation based on delegate, thus very flexible. You can instantiate a DelegateVertexAndEdgeListGraph and provide 2 delegates: one that returns a IEnumerable&lt;TVertex&gt;, and a delegate that returns out-edges given a vertex.</p>\r\n\r\n<p><span style=\"color:#2b91af;font-size:x-small\"></span></p></div>\r\n<div>\r\n<div> </div></div></div></blockquote></div>",
    "PostedDate": "2009-06-22T10:11:54.593-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "204177",
    "ThreadId": "59654",
    "Html": "<p>Storing the IDs only and using SEquatableEdge&lt;int&gt; is a good idea in your case. Your code should look like this:</p>\r\n<p>IEnumerable&lt;int&gt; vertexIDs = // create a query that select all vertices<br>&nbsp;&nbsp;&nbsp; from v&nbsp;in db.Vertices select v.ID;<br>TryFunc&lt;int, IEnumerable&lt;SEquatable&lt;int&gt;&gt; tryGetOutEdges = delegate(int id, out IEnumerable&lt;SEquatable&lt;int&gt;&gt; edges) {<br>&nbsp;&nbsp;&nbsp; // query the database for the out edges of id&nbsp;<br>&nbsp;&nbsp;&nbsp; var query = from e in db.DirectedEdges<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where e.SourceID == id<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select new SEquatable&lt;int&gt;(e.SourceID, e.TargetID);<br>&nbsp;&nbsp;&nbsp;&nbsp;// concretize the query<br>&nbsp;&nbsp;&nbsp;&nbsp;var edgesArray = query.ToArray();<br>&nbsp;&nbsp;&nbsp; edges = edgesArray;<br>&nbsp;&nbsp;&nbsp; return edges.Length&nbsp;&gt; 0;<br>&nbsp;&nbsp;&nbsp; };<br>var g = new DelegateVertexAndEdgeListGraph(vertexIDs, tryGetOutEdges);</p>",
    "PostedDate": "2009-06-22T11:58:45.453-07:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "204949",
    "ThreadId": "59654",
    "Html": "<p>Thanks for all the help, Peli-- it's much appreciated.</p>\r\n<p>Unfortunately, I'm still having a few problems with the sample code you posted above.&nbsp; I added the missing &quot;&gt;&quot; to the TryFunc line, but I'm still getting two intellisense errors.</p>\r\n<p>I'm told that <em>'Systems.Collection.Generics.IEnumerable&lt;QuickGraph.SEquatableEdge&lt;int&gt;&gt;' does not contain a definition for 'length' and no extension method 'length' accepting a first argument of type 'Systems.Collection.Generics.IEnumerable&lt;Quickgraph.SEquatableEdge&lt;int&gt;&gt;' could be found (Are you missingb a using directive or an assembly reference?)</em></p>\r\n<p>Also, I get <em>&quot;Using the generic type 'QuickGraph.DelegateVertexAndEdgListGraph&lt;TVertex,TEdge&gt;' requires 2 type arguments.&quot;</em></p>\r\n<p><em></em></p>",
    "PostedDate": "2009-06-24T05:20:16.517-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "205054",
    "ThreadId": "59654",
    "Html": "<p>typo:</p>\r\n<p>&nbsp;&nbsp; &nbsp;return&nbsp;edgesArray.Length&nbsp;&gt; 0;</p>\r\n<p>C# should infer those generic type arguments. Maybe it does not because of the previous error. Otherwise, TVertex = int, TEdge = SEquatable&lt;int&gt;.</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-06-24T09:17:56.62-07:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "206628",
    "ThreadId": "59654",
    "Html": "<p>I made the fixes that you suggested, and everything compiles fine.&nbsp; I can build my graph, and see the Vertices.</p>\r\n<p>Unfortunately, when I try to access g.OutEdges(myVertex) on a given vertex, I get the following exception:</p>\r\n<p>System.ArgumentOutOfRangeException was unhandled<br>&nbsp; Message=Specified argument was out of the range of valid values.<br>Parameter name: v<br>&nbsp; Source=QuickGraph<br>&nbsp; ParamName=v</p>\r\n<p>Any ideas?</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-06-29T08:17:05.24-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "207368",
    "ThreadId": "59654",
    "Html": "<p>Is 'myVertex' a valid vertex id?</p>",
    "PostedDate": "2009-06-30T21:47:49.807-07:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "207415",
    "ThreadId": "59654",
    "Html": "<div>Sorry, I should have been more clear: I was actually trying to walk the graph.  My code was:</div>\r\n<div>\r\n<p></p>foreach (var vtx in g.Vertices) {\r\n<p></p>foreach (var ed in g.OutEdges(vtx)) {\r\n<p></p>Console.WriteLine(ed);<br>\r\nwhich followed after the sample code you provided to create the DelegateVertexAndEdgeListGraph.<br></div>\r\n<div>On Wed, Jul 1, 2009 at 6:47 AM, pelikhan <span dir=ltr>&lt;<a href=\"mailto:notifications@codeplex.com\">notifications@codeplex.com</a>&gt;</span> wrote:<br>\r\n<blockquote style=\"border-left:#ccc 1px solid;margin:0px 0px 0px 0.8ex;padding-left:1ex\">\r\n<div>\r\n<p>From: pelikhan</p>\r\n<div>\r\n<p>Is 'myVertex' a valid vertex id?</p></div>\r\n<div>\r\n<div>\r\n<p>Read the <a href=\"http://quickgraph.codeplex.com/Thread/View.aspx?ThreadId=59654&ANCHOR#Post207368\">full discussion online</a>.</p>\r\n<p>To add a post to this discussion, reply to this email (<a href=\"mailto:quickgraph@discussions.codeplex.com?subject=[quickgraph:59654]\">quickgraph@discussions.codeplex.com</a>)</p>\r\n<p>To start a new discussion for this project, email <a href=\"mailto:quickgraph@discussions.codeplex.com\">quickgraph@discussions.codeplex.com</a></p>\r\n<p>You are receiving this email because you subscribed to this discussion on CodePlex. You can <a href=\"http://www.codeplex.com/site/discussions/thread/unsubscribe/59654\">unsubscribe</a> on codePlex.com.</p>\r\n\r\n<p>Please note: Images and attachments will be removed from emails. Any posts to this discussion will also be available online at <a href=\"http://codeplex.com/\">codeplex.com</a></p></div></div></div></blockquote>\r\n</div><br>",
    "PostedDate": "2009-07-01T00:55:57.373-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "207561",
    "ThreadId": "59654",
    "Html": "<p>Oops... I&quot;ve made the impl of OutEdges more merciful. Sync or have the tryGetOutEdges method return true always.</p>",
    "PostedDate": "2009-07-01T07:49:37.737-07:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "207584",
    "ThreadId": "59654",
    "Html": "<div>Thanks!  I synced, and it works great now. </div>\r\n<div> </div>\r\n<div>Thanks again for all the help.<br><br></div>\r\n<div>On Wed, Jul 1, 2009 at 4:49 PM, pelikhan <span dir=ltr>&lt;<a href=\"mailto:notifications@codeplex.com\">notifications@codeplex.com</a>&gt;</span> wrote:<br>\r\n<blockquote style=\"border-left:#ccc 1px solid;margin:0px 0px 0px 0.8ex;padding-left:1ex\">\r\n<div>\r\n<p>From: pelikhan</p>\r\n<div>\r\n<p>Oops... I&quot;ve made the impl of OutEdges more merciful. Sync or have the tryGetOutEdges method return true always.</p></div>\r\n<div>\r\n<div>\r\n<p>Read the <a href=\"http://quickgraph.codeplex.com/Thread/View.aspx?ThreadId=59654&ANCHOR#Post207561\">full discussion online</a>.</p>\r\n<p>To add a post to this discussion, reply to this email (<a href=\"mailto:quickgraph@discussions.codeplex.com?subject=[quickgraph:59654]\">quickgraph@discussions.codeplex.com</a>)</p>\r\n<p>To start a new discussion for this project, email <a href=\"mailto:quickgraph@discussions.codeplex.com\">quickgraph@discussions.codeplex.com</a></p>\r\n<p>You are receiving this email because you subscribed to this discussion on CodePlex. You can <a href=\"http://www.codeplex.com/site/discussions/thread/unsubscribe/59654\">unsubscribe</a> on codePlex.com.</p>\r\n\r\n<p>Please note: Images and attachments will be removed from emails. Any posts to this discussion will also be available online at <a href=\"http://codeplex.com/\">codeplex.com</a></p></div></div></div></blockquote>\r\n</div><br>",
    "PostedDate": "2009-07-01T08:38:07.323-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]