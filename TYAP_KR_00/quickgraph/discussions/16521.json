[
  {
    "Id": "53548",
    "ThreadId": "16521",
    "Html": "\r\nI need to put graph diagrams up on a web page, and allow users to change parameters like from/to date, then re-render the graph. I'm trying to select the rendering engine. My graphs are state-transition diagrams that show user paths through a web site. My data source are SQL Server 2005 tables that contain data similar to (but much richer than) web server logs. <br /><br />It appears the GraphViz interface from QuickGraph (out-of-the-box) is limited to writing the DOT file, and then I would have to write the code that invokes GraphViz to read the file and stream the .png image to the web page.<br /><br />GLEE does not seem to be as sophisticated as GraphViz in terms of the graph types and the multiple ways of rendering the nodes and vertices (again comparing out-of-the-box functionality).<br /><br />Can anyone comment on which is the better rendering solution, for creating a graph on a web page?<br /><br />If anyone has an example (c# or VB) that shows how to invoke the GraphViz engine to turn a DOT file generated by QuickGraph into an image that can be streamed to the web page, that would be fantastic!<br />",
    "PostedDate": "2007-10-16T12:02:50.513-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "53630",
    "ThreadId": "16521",
    "Html": "<ol><li>Read the licenses and make sure you can use either graphviz or glee</li><li>Glee has the same level of features and is actively developed by MSR. NGraphviz is a snapshot of graphiz that is not updated anymore.</li><li>Glee is fully managed and can render the graph in memory. NGraphviz is a managed wrapper around a big chunk of C/C++. I would not run it on a web server.</li></ol><br />My answer would be to use glee.<br />",
    "PostedDate": "2007-10-16T21:03:31.213-07:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  }
]