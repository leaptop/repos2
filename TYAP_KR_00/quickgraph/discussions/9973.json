[
  {
    "Id": "32389",
    "ThreadId": "9973",
    "Html": "\r\nHi,<br /><br />Given a source vertex and a destination vertex, there could exist multiple paths which can be traversed unambiguously between them. Which algorithm would provide us these multiple paths?<br /><br />Thanks<br />",
    "PostedDate": "2007-05-07T17:22:08.237-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "32431",
    "ThreadId": "9973",
    "Html": "\r\nCould you define unambiguously? Are you looking for a particular criteria such as a shortest path?<br />",
    "PostedDate": "2007-05-08T01:21:28.85-07:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "32489",
    "ThreadId": "9973",
    "Html": "\r\nConsider a multi branched graph. There could be a scenario where from the start vertex to target vertex we have 2-3 shortest paths (i.e paths with equal number of vertices b\\w start n target). <br /><br />Which algorithm gives us the list of such paths?<br /><br />If one provides more vertices  in a shortest path, there would be no ambiguity.<br />",
    "PostedDate": "2007-05-08T09:20:05.703-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "32562",
    "ThreadId": "9973",
    "Html": "\r\nI don't think QuickGraph has any algorithm for that particular problem.<br />",
    "PostedDate": "2007-05-08T23:30:26.7-07:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "141306",
    "ThreadId": "9973",
    "Html": "I would be interested in the same.<br>\r\n<br>\r\nI have a workflow where decisions lead the graph to two or more different paths after the decision node. I not only need to find out if there are indeed branches after a decision node, but also if these branches are joined later on again.<br>\r\n<br>\r\nDoes anybody have an idea on how to tackle this?\r\n",
    "PostedDate": "2008-12-17T05:25:19.99-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "144522",
    "ThreadId": "9973",
    "Html": "QuickGraph now provides a way to compute the k-shortest path between 2 nodes.\r\n",
    "PostedDate": "2009-01-05T13:52:15.153-08:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "427619",
    "ThreadId": "9973",
    "Html": "<p>Could someone please provide a simple sample of performing this?&nbsp; I have the latest download, but cannot find that k-Shortest path implementation.</p>\r\n<p>thanks</p>",
    "PostedDate": "2010-04-05T15:18:44.607-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "441499",
    "ThreadId": "9973",
    "Html": "<p>Its in QuickGraph.Algorithms.RankedShortestPath.HoffmanPavleyRankedShortestPathAlgorithm&lt;TVertex, TEdge&gt;</p>",
    "PostedDate": "2010-05-11T07:15:12.74-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]