[
  {
    "Id": "217370",
    "ThreadId": "63928",
    "Html": "<p>Is it possible to apply function over time as weight for an edge, In oder word if i have this graph</p>\r\n<p>A-&gt;B, B-&gt;D,A-&gt;C,C-&gt;D,D-&gt;E and wanna go from A to E</p>\r\n<p>then i have 2 solutions: A-&gt;B-&gt;D-&gt;E and A-&gt;C-&gt;D-&gt;E,</p>\r\n<p>can D-&gt;E weight be different depending on the path that was taked?</p>\r\n<p>If yes how look the function that we can add into the graph for the weight</p>\r\n<p>Dictionary&lt;Edge&lt;TVertex&gt;, ???&gt; where ??? is a function of time?</p>\r\n<p>thz in advance</p>",
    "PostedDate": "2009-07-29T15:34:18.633-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "217561",
    "ThreadId": "63928",
    "Html": "<p>What are you trying to accomplish? Are you trying to determine which path you took from A to E? I'm not an expert but I don't believe the weight of the edge between D -&gt; E should change.</p>",
    "PostedDate": "2009-07-30T05:29:17.25-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "217581",
    "ThreadId": "63928",
    "Html": "<p>The goal is to use weight that can be different for the same edge depending on the path that you take.&nbsp;As a example consider a shortest path algorith that represent a human running trough a road. It is pretty easy to set a weight for each edge base on the distance. Let say A-&gt;B= 2&nbsp;,B-&gt;D=3, A-&gt;C=1,C-&gt;D=6,D-&gt;E=8. That is working fine and is pretty easy to represent with Quickgraph. But let consider that we want to also take care about the wind or the time that the runner have to wait if a train go trought the path. Then depending on the way that you select the same edge can have a different weight since the wind can change direction.&nbsp;Let say in this example that if you use the path A-&gt;B-&gt;D-&gt;E the edge D-&gt;E = 7.5 and if you take the path A-C-&gt;D-&gt;E the&nbsp;edge D-&gt;E = 8.5. So instead of having a static value for the edge weight, is it possible to use a function, and if yes, how this function look like?</p>\r\n<p>I aggre that in this example the shortest path will always be the same, but ive selected a really simple example just to show the concept since i am using huge graph. In that case it can makes huge difference,</p>\r\n<p>Thz in advance (since english is not my main language it can be possible that some sentense look&nbsp;special :))</p>",
    "PostedDate": "2009-07-30T06:36:55.29-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "217604",
    "ThreadId": "63928",
    "Html": "<p>Just to add a little precision, when i am talking about weight that are function of time, it could also be weight that are function of the sommation of the weight to reach that edge, This is mostly equivalent.</p>\r\n<p>have a nice day</p>",
    "PostedDate": "2009-07-30T07:29:30.423-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "217821",
    "ThreadId": "63928",
    "Html": "<p>It seems that you could acheive this by having multiple edges between D and E with different weights.</p>",
    "PostedDate": "2009-07-30T17:47:03.53-07:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "217993",
    "ThreadId": "63928",
    "Html": "<p>In&nbsp;the specific&nbsp;case of an algorith like the shortest path, if i use multiple edges between 2 vertex,&nbsp;it will always select the same one, ie the shortest one. So&nbsp;I am presently looking of the effort that it could take to implement this features because after looking to the constructor that accept the weight ive conclude that it is not possible for now to use function instead of static weight. If it is not too complicated ill send you proposed code in the case you want to add it to the next version of quickgraph. I plan to try to do it in function of the sommation of the weight since it seems lot easier to code than in function of time. by example in providing weight function = currentWeightToReachThisEdge+ 4. In that specific case it is equivalent to set a static value of 4, but it open the possibility of using complex formulas by example weight function = currentWeightToReachThisEdge*1.1+2, etc... If anyone got any better idea of how to implement it or want to have more information about what i am trying to do&nbsp;plz add your idea in this blog.</p>\r\n<p>have a nice day</p>",
    "PostedDate": "2009-07-31T06:46:50.723-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "218004",
    "ThreadId": "63928",
    "Html": "<p>there is a distance relaxer that seem to do someting similar, if anyone that have already use it can provide extra&nbsp;information about what it is doing, it will be appreciated.</p>\r\n<p>thz in advance</p>",
    "PostedDate": "2009-07-31T07:08:35.07-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "218041",
    "ThreadId": "63928",
    "Html": "<p>The edge weights is already a delegate (a&nbsp;Func&lt;Edge, double&gt;), so you can use your own logic to give a cost to edges. If your weight depends on the path taken, you will break invariants of the shortest path algorithms and they will provide incorrect results.</p>",
    "PostedDate": "2009-07-31T08:22:13.547-07:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "218164",
    "ThreadId": "63928",
    "Html": "<p>I don't understand how the delegate (Func&lt;Edge,double&gt; ) can be use as weight that change over time, so ive implemented it using a Func&lt;Edge,IWeight&gt; where IWeight is just a interface with a double as value and a method computeWeight(double cumulativeWeight). Ive add the related constructor. And modify the Relax from ShortestPathAlgorithmBase to support both double and IWeight. It seems to work well, so id like to know which invariants could be break to validate that i've not forget someting?</p>\r\n<p>Relax{</p>\r\n<p>...</p>\r\n<p><span style=\"font-size:x-small\">&lt;font size=&quot;2&quot;&gt;\r\n<p>we =</p>\r\n&lt;/font&gt;</span>\r\n<p><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">this</span></span><span style=\"font-size:x-small\">.Weights2(e).ComputeWeight(du); </span></p>\r\n</p>\r\n<p>...</p>\r\n<p>}</p>\r\n<p>note: i could have added a TWeight to the constructor instead but i was just doing a fast test to check if it was supported so i wouldnt want to have to add it to each shortest path algorith.</p>\r\n<p>have a nice day</p>",
    "PostedDate": "2009-07-31T14:28:53.34-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "221405",
    "ThreadId": "63928",
    "Html": "<p>The algorithm keeps a dictionary of the aggregated weights computed so far - it caches those values since it assumes they are not changing (<span style=\"font-size:x-small\">relaxer.Combine(du, we))</span>. As soon as you start changing weights values, the values in the distances dictionary are not valid - which means the prioritization of the BFS gets bogus.</p>",
    "PostedDate": "2009-08-09T23:25:51.687-07:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  }
]