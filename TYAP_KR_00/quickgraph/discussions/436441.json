[
  {
    "Id": "1014503",
    "ThreadId": "436441",
    "Html": "I am unable to get .NET binary serialization this to work. I'm not that experienced with portable library projects as I have never used them before. The only significant difference I noticed is that the portable libraries don't support the .NET binary serialization. Try as I might I could not manage to compile the 3.6 project as a non-portable project.\r<br />\n<br />\nI don't really want to use other forms of serialization since I work with very large graphs and serializing to GraphML (or similar) adds too much overhead.\r<br />\nI would prefer to use 3.6 since I am already using features which are not included in 3.3.\r<br />\n<br />\nCan anyone suggest what I can do?<br />\n",
    "PostedDate": "2013-03-13T04:50:18.26-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1027715",
    "ThreadId": "436441",
    "Html": "Hi apokryfos, I am in the same situation. It is just impossible to compile the source code provided by the authors. Have you any update for this problem? \r<br />\nMoreover, I do not get if the project is still alive or not..\r<br />\nCan anyone reply?\r<br />\nThanks in advance.\r<br />\nDiego<br />\n",
    "PostedDate": "2013-04-09T01:19:57.513-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1027768",
    "ThreadId": "436441",
    "Html": "Haven't had any update on this yet. \r<br />\n<br />\nCompiling the source isn't the real issue, though I have to admit it takes some effort to get it to compile. The problem is compiling it not as a portable library project but as a standard .NET class library project, in order to use BinaryFormatters for binary serialization. \r<br />\n<br />\nI'm using simple IO using BinaryReaders/Writers for now, but this means I'll need to implement additional ones in order to start using other more complex types for TVertex or TEdge (right now it's just int and Edge&lt;int&gt;). \r<br />\n<br />\nI'm not sure if the project is alive either. \r<br />\n<br />\nAs a sidenote I think I had to \r<br />\na) download the &quot;portable library SDK&quot; and &quot;portable library tools for visual studio 10&quot;\r<br />\nb) include the QuickGraph.Serialization project in the core of the solution because (for some reason) it was referenced but not included\r<br />\ndoing this I was able to compile it as a portable library project (which is the same one that I could download from NuGet).<br />\n",
    "PostedDate": "2013-04-09T03:58:09.067-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1028259",
    "ThreadId": "436441",
    "Html": "Finally, I recompiled the project as a standard library. <a href=\"https://sites.google.com/site/diegotosato/news-and-recent-highlights/quickgraph36standardnetclasslibrary\" rel=\"nofollow\">Here</a> my solution.\r<br />\n<br />\nd<br />\n",
    "PostedDate": "2013-04-10T00:37:46.633-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1028362",
    "ThreadId": "436441",
    "Html": "Wow! You're a lifesaver.\r<br />\n<br />\nMuch appreciated.<br />\n",
    "PostedDate": "2013-04-10T04:18:02.06-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]