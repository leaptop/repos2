[
  {
    "Id": "526337",
    "ThreadId": "235850",
    "Html": "\r\n<p><span id=\"x_result_box\" lang=\"en\"><span>Hi,<br>\r\n<br>\r\n</span><span>I start using the library QuickGraph, to execute the Dijkstra Shortest Path algorithm by using\r\n</span></span>GraphML file format for graphs<span id=\"x_result_box\" lang=\"en\"><span>,<br>\r\n</span><span>Until now I could execute the algorithm, but I don't know how can I set the target on my program, and also how can I use the cost of the edges from my GraphML file<br>\r\n</span></span></p>\r\n<p>an example of the code</p>\r\n<p><br>\r\n<span id=\"x_result_box\" lang=\"en\"><span></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>            <span style=\"color:green\">//read GRAPHML file</span>\r\n            <span style=\"color:blue\">var</span> g = <span style=\"color:blue\">new</span> BidirectionalGraph&lt;<span style=\"color:blue\">int</span>, Edge&lt;<span style=\"color:blue\">int</span>&gt;&gt;();\r\n            <span style=\"color:blue\">using</span> (<span style=\"color:blue\">var</span> xreader = XmlReader.Create(<span style=\"color:#a31515\">@&quot;C:\\GraphML\\test2.graphml&quot;</span>))\r\n                g.DeserializeFromGraphML(xreader,\r\n                    id =&gt; <span style=\"color:blue\">int</span>.Parse(id),\r\n                    (source, target, id) =&gt; <span style=\"color:blue\">new</span> Edge&lt;<span style=\"color:blue\">int</span>&gt;(source, target)\r\n                );\r\n \r\n \r\n            <span style=\"color:blue\">int</span> root = 68; <span style=\"color:green\">// constant cost</span>\r\n \r\n            Func&lt;Edge&lt;<span style=\"color:blue\">int</span>&gt;, <span style=\"color:blue\">double</span>&gt; edgeCost1 = b =&gt; 1; <span style=\"color:green\">// Le cout definie comme constante</span>\r\n \r\n            <span style=\"color:blue\">var</span> predecessors = <span style=\"color:blue\">new</span> VertexPredecessorRecorderObserver&lt;<span style=\"color:blue\">int</span>, Edge&lt;<span style=\"color:blue\">int</span>&gt;&gt;();\r\n \r\n \r\n            <span style=\"color:green\">//  Dijkstra </span>\r\n            DijkstraShortestPathAlgorithm&lt;<span style=\"color:blue\">int</span>, Edge&lt;<span style=\"color:blue\">int</span>&gt;&gt; dijkstra1 = <span style=\"color:blue\">new</span> DijkstraShortestPathAlgorithm&lt;<span style=\"color:blue\">int</span>, Edge&lt;<span style=\"color:blue\">int</span>&gt;&gt;(g, edgeCost1);\r\n \r\n             VertexDistanceRecorderObserver&lt;<span style=\"color:blue\">int</span>, Edge&lt;<span style=\"color:blue\">int</span>&gt;&gt; distObserver1 = <span style=\"color:blue\">new</span> VertexDistanceRecorderObserver&lt;<span style=\"color:blue\">int</span>, Edge&lt;<span style=\"color:blue\">int</span>&gt;&gt;(edgeCost1);\r\n            distObserver1.Attach(dijkstra1);\r\n \r\n            VertexPredecessorRecorderObserver&lt;<span style=\"color:blue\">int</span>, Edge&lt;<span style=\"color:blue\">int</span>&gt;&gt; predecessorObserver1 = <span style=\"color:blue\">new</span> VertexPredecessorRecorderObserver&lt;<span style=\"color:blue\">int</span>, Edge&lt;<span style=\"color:blue\">int</span>&gt;&gt;();\r\n            predecessorObserver1.Attach(dijkstra1);\r\n \r\n            dijkstra1.Compute(root);\r\n \r\n            <span style=\"color:blue\">foreach</span> (KeyValuePair&lt;<span style=\"color:blue\">int</span>, <span style=\"color:blue\">double</span>&gt; kvp <span style=\"color:blue\">in</span> distObserver1.Distances)\r\n                 Console.WriteLine(<span style=\"color:#a31515\">&quot;Distance from root to node {0} is {1}&quot;</span>, kvp.Key, kvp.Value);\r\n             <span style=\"color:blue\">foreach</span> (KeyValuePair&lt;<span style=\"color:blue\">int</span>, Edge&lt;<span style=\"color:blue\">int</span>&gt;&gt; kvp <span style=\"color:blue\">in</span> predecessorObserver1.VertexPredecessors)\r\n                 Console.WriteLine(<span style=\"color:#a31515\">&quot;If you want to get to {0} you have to enter through the in edge {1}&quot;</span>, kvp.Key, kvp.Value);\r\n \r\n</pre>\r\n</div>\r\nThanks<br>\r\n</span></span>\r\n<p></p>\r\n",
    "PostedDate": "2010-11-24T03:09:09.133-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]