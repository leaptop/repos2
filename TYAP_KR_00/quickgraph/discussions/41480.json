[
  {
    "Id": "137639",
    "ThreadId": "41480",
    "Html": "Hi everybody,<br>\r\n<br>\r\nI was just trying out the AlgorithmExtension.ShortestPathsBellmanFord with this small example:<br>\r\n<hr>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AdjacencyGraph&lt;int, Edge&lt;int&gt;&gt; testGraph = new AdjacencyGraph&lt;int, Edge&lt;int&gt;&gt;();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; testGraph.AddVerticesAndEdge(new Edge&lt;int&gt;(1, 2));<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; testGraph.AddVerticesAndEdge(new Edge&lt;int&gt;(1, 3));<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; testGraph.AddVerticesAndEdge(new Edge&lt;int&gt;(3, 4));<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; testGraph.AddVerticesAndEdge(new Edge&lt;int&gt;(1, 4));<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var testPath = testGraph.ShortestPathsBellmanFord&lt;int, Edge&lt;int&gt;&gt;(e =&gt; 1.0, 1);<br>\r\n<hr>\r\n<br>\r\nBut somehow testPath(1) (and any other node) is always empty. What did I do wrong?<br>\r\n<br>\r\nAny help appreciated!<br>\r\n<br>\r\nHendrik.\r\n",
    "PostedDate": "2008-12-04T05:54:02.153-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "137716",
    "ThreadId": "41480",
    "Html": "testPath is basically a function that returns paths from vertex 1Â to any other vertex. The shortest path from 1 to 1 is empty.\r\n",
    "PostedDate": "2008-12-04T09:06:48.03-08:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "137924",
    "ThreadId": "41480",
    "Html": "Hi Pelikhan,<br>\r\n<br>\r\nthanks for your reply.<br>\r\ntestPath(1) was indeed a bad example as it is the source node. <br>\r\nBut as I wrote, testPath is empty for any other node, too.<br>\r\nCan anybody verify that? Here is a complete test example:<br>\r\n<br>\r\nusing System;<br>\r\nusing System.Collections.Generic;<br>\r\nusing System.Linq;<br>\r\nusing System.Text;<br>\r\nusing QuickGraph;<br>\r\nusing QuickGraph.Algorithms;<br>\r\n<br>\r\nnamespace ConsoleApplication1<br>\r\n{<br>\r\n&nbsp;&nbsp;&nbsp; class Program<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; static void Main(string[] args)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AdjacencyGraph&lt;int, Edge&lt;int&gt;&gt; testGraph = new AdjacencyGraph&lt;int, Edge&lt;int&gt;&gt;();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; testGraph.AddVerticesAndEdge(new Edge&lt;int&gt;(1, 2));<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; testGraph.AddVerticesAndEdge(new Edge&lt;int&gt;(1, 3));<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; testGraph.AddVerticesAndEdge(new Edge&lt;int&gt;(3, 4));<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; testGraph.AddVerticesAndEdge(new Edge&lt;int&gt;(1, 4));<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var testPath = testGraph.ShortestPathsBellmanFord&lt;int, Edge&lt;int&gt;&gt;(e =&gt; 1.0, 1);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 1; i &lt;= 4; i++)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(testPath(i).Count());<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; }<br>\r\n}<br>\r\n<br>\r\n",
    "PostedDate": "2008-12-05T01:04:26.827-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "138200",
    "ThreadId": "41480",
    "Html": "This discussion has been copied to a work item. Click <a href=\"http://www.codeplex.com/quickgraph/WorkItem/View.aspx?WorkItemId=11894\">here</a> to go to the work item and continue the discussion.",
    "PostedDate": "2008-12-05T21:20:07.527-08:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "138203",
    "ThreadId": "41480",
    "Html": "Problem fixed and tested.\r\n",
    "PostedDate": "2008-12-05T22:10:41.833-08:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "141377",
    "ThreadId": "41480",
    "Html": "Sorry, but i have another problem with ShortestPaths.<br>\r\n<br>\r\nQuickGraph.AdjacencyGraph&lt;int,QuickGraph.Edge&lt;int&gt;&gt;' does not contain a definition for 'ShortestPathsBellmanFord'<br>\r\n<br>\r\n",
    "PostedDate": "2008-12-17T09:35:17.467-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "141481",
    "ThreadId": "41480",
    "Html": "ShortestPathsBellmanFord is an extension method. You need to add an import for <span style=\"font-size:13px\">QuickGraph.Algorithms at the top of the file.<br>\r\n<br>\r\n{{<br>\r\n<span style=\"font-size:13px\">using QuickGraph.Algorithms;<br>\r\n}}\r\n<p>&nbsp;</p>\r\n</span></span>\r\n",
    "PostedDate": "2008-12-17T16:42:53.983-08:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "142604",
    "ThreadId": "41480",
    "Html": "Of course I have added this string =)<br>\r\n<br>\r\n[code]<br>\r\nusing QuickGraph;<br>\r\nusing QuickGraph.Algorithms;<br>\r\nusing QuickGraph.Algorithms.ShortestPath;<br>\r\n<br>\r\n......................<br>\r\n<br>\r\n&nbsp;private void quickGraphCalculation()<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AdjacencyGraph&lt;int, Edge&lt;int&gt;&gt; testGraph = new AdjacencyGraph&lt;int, Edge&lt;int&gt;&gt;();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; testGraph.AddVerticesAndEdge(new Edge&lt;int&gt;(1, 2));<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; testGraph.AddVerticesAndEdge(new Edge&lt;int&gt;(1, 3));<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; testGraph.AddVerticesAndEdge(new Edge&lt;int&gt;(3, 4));<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; testGraph.AddVerticesAndEdge(new Edge&lt;int&gt;(1, 4));<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var testPath = testGraph.ShortestPathsBellmanFord&lt;int, Edge&lt;int&gt;&gt;(1.0, 1);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 1; i &lt;= 4; i++)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MessageBox.Show(testPath(i).Count());<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n[/code]<br>\r\n<br>\r\nError&nbsp;&nbsp; &nbsp;2&nbsp;&nbsp; &nbsp;'QuickGraph.AdjacencyGraph&lt;int,QuickGraph.Edge&lt;int&gt;&gt;' does not contain a definition for 'ShortestPathsBellmanFord'&nbsp;&nbsp; &nbsp;C:\\Documents and Settings\\vikhmyro\\My Documents\\Visual Studio 2005\\Projects\\ITKurs1\\ITKurs1\\Form2.cs&nbsp;&nbsp; &nbsp;335<br>\r\n<br>\r\n",
    "PostedDate": "2008-12-23T07:53:55.703-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "142637",
    "ThreadId": "41480",
    "Html": "<p>Are you using VS2005? In that case, you do not have the extension methods. If that's the case, you need to explicitely name the static method</p>\r\n<p>{{<br>\r\nvar testPath = AlgorithmExtensions.ShortestPathsBellmanFord&lt;int, Edge&lt;int&gt;&gt;(testGraph, 1.0, 1);<br>\r\n}}</p>\r\n",
    "PostedDate": "2008-12-23T10:26:32.59-08:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  }
]