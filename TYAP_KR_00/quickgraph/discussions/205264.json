[
  {
    "Id": "419277",
    "ThreadId": "205264",
    "Html": "<p>Fist of all, thanks for your library, really useful!!! :)</p>\r\n<p>I've been reading the documentation but I'm not sure if I can do this with QuickGraph, or how: I want a graph with vertices with weight (so, the cost is for entering, not exiting), and also I can have different weights on edges. Example: vertices are cities with different types of transit congestion (cost for car, and cost for truck), and edges are roads (with different weights, think of road and highway) , and railroads.</p>\r\n<p>It seems a bidirectional graph, with parallel edges.&nbsp;The weights in vertices are added to the edges entering the vertice (ok), but how to call the dijkstra differentiated for cars going by road, going by highway, going by both, dijkstra for trucks (the same as cars), and trains?</p>\r\n<p>And how calling dijkstra&nbsp;with a&nbsp;&quot;man&quot; who can get all of those vehicles? Any idea?</p>\r\n<p>And a second question, the weights are &quot;time&quot;, and I'd like&nbsp;to know which combination of edges are the best for going from A to any node, knowing that I can use any edge (road, highway, train) but there is a cost to use train. Example: Each time I select a train edge, the cost is &quot;1&quot; more than the weight of that immediate edge (train, imagine the waiting in the train station), and each time I leave the train to use other options the cost is &quot;0.5&quot; for that immediate edge (road, the waiting for getting a&nbsp;renting car).</p>\r\n<p>Are all of it possible with the QuickGraph? Using function on edges? Or another algorithm? Any other option?</p>\r\n<p>Thanks!!</p>",
    "PostedDate": "2010-03-17T09:12:27.41-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]