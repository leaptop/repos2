[
  {
    "Id": "523864",
    "ThreadId": "235188",
    "Html": "\r\n<p>We have a situation where some vertex has more than one edge. When we try to remove one of the edges, we get an exception from a Code Contract.</p>\r\n<pre style=\"font-family:consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af\">IEdge</span>&lt;<span style=\"color:blue\">object</span>&gt;&nbsp;edge;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">if</span>&nbsp;(_graphToVisualize.TryGetEdge(sVertex,&nbsp;tVertex,&nbsp;<span style=\"color:blue\">out</span>&nbsp;edge))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">if</span>&nbsp;(edge&nbsp;!=&nbsp;<span style=\"color:blue\">null</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_dispatcher.BeginInvoke((<span style=\"color:#2b91af\">Action</span>)(()&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">try</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_graphToVisualize.RemoveEdge(edge);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">catch</span>&nbsp;(<span style=\"color:#2b91af\">Exception</span>&nbsp;ex)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af\">Console</span>.WriteLine(<span style=\"color:#a31515\">&quot;Error&nbsp;removing&nbsp;OUT&nbsp;edge,&nbsp;{0}&quot;</span>,&nbsp;ex.Message);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>Resulting error:<br>A first chance exception of type 'System.Diagnostics.Contracts.__ContractsRuntime.ContractException' occurred in QuickGraph.dll<br>Error removing OUT edge, Precondition failed: e != null<br><br>Is there a contract that I can remove to allow this?<br><br>Thanks!<br></pre>\r\n",
    "PostedDate": "2010-11-18T08:07:05.623-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "524061",
    "ThreadId": "235188",
    "Html": "\r\n<p>You need to be careful with closures in C#. The side effects of TryGetEdge are visible in the lambda expression execute by the _dispatcher. Do:</p>\r\n<p><strong>var e = edge;</strong><br>\r\n_dispatcher.BeginInvoke((<span style=\"color:#2b91af\">Action</span>)(()&nbsp;=&gt; {<br>\r\n<span style=\"color:blue\"><span style=\"color:#000000\">&nbsp; </span>try </span>{ _graphToVisualize.RemoveEdge<strong>(e)</strong>; } ...</p>\r\n",
    "PostedDate": "2010-11-18T14:45:51.833-08:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "524447",
    "ThreadId": "235188",
    "Html": "\r\n<p>Thanks, pelikhan, that worked!</p>\r\n",
    "PostedDate": "2010-11-19T10:20:46.963-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]