[
  {
    "Id": "642605",
    "ThreadId": "265220",
    "Html": "\r\n<p>Hi, Im new to this forum and to using this nifty little thing. Im atm working on a VRP solution for varehouses, and i have the following code for a shortest path:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>            <span style=\"color:blue\">int</span>[,] KnudeArray =  <span style=\"color:blue\">new</span> <span style=\"color:blue\">int</span>[,] {{ -1, -1, -1, -1, 9, 10, -1, 5, -1 }, { -1, -1, -1, 9, 10, 11, 5, -1, -1 },{ -1, -1, -1, 10, 11, 12, -1, -1, 8 },{ -1, -1, -1, 11, 12, -1, -1, 8, -1 },\r\n                { -1, 9, 10, -1, 5, -1, -1, 1, 2 },{ -1, -1, -1, -1, 6, -1, -1, -1, -1 },{ -1, -1, -1, -1, 7, -1, -1, -1, -1 },{ 11, 12, -1, -1, 8, -1, 3, 4, -1 },\r\n                { -1, 5, -1, -1, 1, 2, -1, -1, -1 },{ 5, -1, -1, 1, 2, 3, -1, -1, -1 },{ -1, -1, 8, 2, 3, 4, -1, -1, -1 }, { -1, 8, -1, 3, 4, -1, -1, -1, -1 }};\r\n\r\n            <span style=\"color:blue\">double</span>[,] DistArray = <span style=\"color:blue\">new</span> <span style=\"color:blue\">double</span>[,] {{ -1, -1, -1, -1, 0, 1, -1, 1, -1 },{ -1, -1, -1, 1, 0, 1, 1.414, -1, -1 },{ -1, -1, -1, 1, 0, 1, -1, -1, 1.414 },{ -1, -1, -1, 1, 0, -1, -1, 1, -1 },\r\n                { -1, 1, 1.414, -1, 0, -1, -1, 1, 1.414 }, { -1, -1, -1, -1, 0, -1, -1, -1, -1 },{ -1, -1, -1, -1, 0, -1, -1, -1, -1 },{ 1.414, 1, -1, -1, 0, -1, 1.414, 1, -1 },\r\n                { -1, 1, -1, -1, 0, 1, -1, -1, -1 },{ 1.414, -1, -1, 1, 0, 1, -1, -1, -1 },{ -1, -1, 1.414, 1, 0, 1, -1, -1, -1 },{ -1, 1, -1, 1, 0, -1, -1, -1, -1 }};\r\n\r\n            <span style=\"color:green\">// Begynder med at konstruere en ny graf, hvor &lt;int,Edge&lt;int&gt;&gt; betyder at knuderne</span>\r\n            <span style=\"color:green\">// er repr�senteret ved heltal og kanterne er repr�senteret ved Edge&lt;int&gt; med heltal som</span>\r\n            <span style=\"color:green\">// knuder.</span>\r\n            AdjacencyGraph&lt;<span style=\"color:blue\">int</span>, Edge&lt;<span style=\"color:blue\">int</span>&gt;&gt; graph = <span style=\"color:blue\">new</span> AdjacencyGraph&lt;<span style=\"color:blue\">int</span>, Edge&lt;<span style=\"color:blue\">int</span>&gt;&gt;(<span style=\"color:blue\">false</span>);\r\n\r\n            <span style=\"color:green\">// Vi kan nu begynde at fylde knuder i grafen.</span>\r\n            <span style=\"color:blue\">int</span> n = KnudeArray.GetLength(0); <span style=\"color:green\">// knuderne 0,1,2,3,...,11 ialt 12 knuder bliver tilf�jet. </span>\r\n            <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> i = 0; i &lt; n; i&#43;&#43;)\r\n            {\r\n                <span style=\"color:green\">// Tilf�jer knude med nummeret i til grafen.</span>\r\n                graph.AddVertex(i);\r\n            }\r\n\r\n            Dictionary&lt;Edge&lt;<span style=\"color:blue\">int</span>&gt;, <span style=\"color:blue\">double</span>&gt; cost = <span style=\"color:blue\">new</span> Dictionary&lt;Edge&lt;<span style=\"color:blue\">int</span>&gt;, <span style=\"color:blue\">double</span>&gt;();\r\n            <span style=\"color:green\">// Hver af kanterne konstrueres og tilf�jes b�de graph (AdjacencyGraph) </span>\r\n            <span style=\"color:green\">// og cost (Dictionary)</span>\r\n            Dictionary&lt;<span style=\"color:blue\">string</span>, Edge&lt;<span style=\"color:blue\">int</span>&gt;&gt; dic = <span style=\"color:blue\">new</span> Dictionary&lt;<span style=\"color:blue\">string</span>,Edge&lt;<span style=\"color:blue\">int</span>&gt;&gt;();\r\n            <span style=\"color:blue\">try</span>\r\n            {\r\n\r\n                <span style=\"color:gray\">///</span><span style=\"color:green\">/ Kanter som g�r ud af knude 0</span>\r\n                <span style=\"color:blue\">int</span> iterationsCounter = 1;\r\n                <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> i = 0; i &lt; KnudeArray.GetLength(0); i&#43;&#43;)\r\n                {\r\n                    <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> j = 0; j &lt; KnudeArray.GetLength(1); j&#43;&#43;)\r\n                    {\r\n                        <span style=\"color:blue\">if</span> (KnudeArray[i, j] != -1)\r\n                        {\r\n                            dic.Add(<span style=\"color:#a31515\">&quot;e&quot;</span> &#43; iterationsCounter, <span style=\"color:blue\">new</span> Edge&lt;<span style=\"color:blue\">int</span>&gt;(i, KnudeArray[i, j]));\r\n                            Edge&lt;<span style=\"color:blue\">int</span>&gt; kant = dic[<span style=\"color:#a31515\">&quot;e&quot;</span> &#43; iterationsCounter];\r\n                            graph.AddEdge(kant); <span style=\"color:green\">// Tilf�jer kanten e1 til grafen</span>\r\n                            cost.Add(kant, DistArray[i, j]);\r\n                            iterationsCounter&#43;&#43;;\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n            <span style=\"color:blue\">catch</span> (KeyNotFoundException ex)\r\n            {\r\n                <span style=\"color:green\">// Denne exception opst�r hvis du pr�ver at inds�tte en kant, som bruger knuder der</span>\r\n                <span style=\"color:green\">// ikke allerede findes i grafen.</span>\r\n                Console.WriteLine(<span style=\"color:#a31515\">&quot; Der er ikke overensstemmelse mellem knuder og kant argumenter. &quot;</span>);\r\n                Console.WriteLine(ex);\r\n            }\r\n\r\n            DijkstraShortestPathAlgorithm&lt;<span style=\"color:blue\">int</span>, Edge&lt;<span style=\"color:blue\">int</span>&gt;&gt; shortest_path\r\n                = <span style=\"color:blue\">new</span> DijkstraShortestPathAlgorithm&lt;<span style=\"color:blue\">int</span>, Edge&lt;<span style=\"color:blue\">int</span>&gt;&gt;(graph,\r\n                        <span style=\"color:blue\">delegate</span>(Edge&lt;<span style=\"color:blue\">int</span>&gt; e)\r\n                        {\r\n                            <span style=\"color:blue\">double</span> value = 0.0;</pre>\r\n<pre>                            cost.TryGetValue(e, <span style=\"color:blue\">out</span> value);\r\n                            <span style=\"color:blue\">return</span> value;\r\n                        }\r\n                    );\r\n\r\n            <span style=\"color:green\">// Nu kan jeg l�se denne korteste vej problemet fra knude 0 til alle andre</span>\r\n            <span style=\"color:green\">// knuder ved at anvende Dijkstra's algoritme</span>\r\n            <span style=\"color:blue\">try</span>\r\n            {\r\n                <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> j = 0; j &lt;= DistArray.GetLength(0); j&#43;&#43;)\r\n                {\r\n                    shortest_path.Compute(j);\r\n\r\n                    <span style=\"color:green\">// Herefter kan jeg hente afstanden ved blot at referere til Distance-array'et</span>\r\n                    <span style=\"color:green\">// for shortest_path. </span>\r\n                    <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> i = 0; i &lt;= DistArray.GetLength(0); i&#43;&#43;)\r\n                    {\r\n                        Console.WriteLine(<span style=\"color:#a31515\">&quot;Korteste vej fra {2} til {0} er lig {1}.&quot;</span>, i, shortest_path.Distances[i], j);\r\n                    }\r\n                }\r\n            }\r\n            <span style=\"color:blue\">catch</span> (Exception ex)\r\n            {\r\n                Console.WriteLine(ex);\r\n            }\r\n\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>Now my problem is, when i hardcode the paths like this:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>                Edge&lt;<span style=\"color:blue\">int</span>&gt; e1 = <span style=\"color:blue\">new</span> Edge&lt;<span style=\"color:blue\">int</span>&gt;(0, 1); <span style=\"color:green\">// Kant fra knude 0 til knude 1</span>\r\n                graph.AddEdge(e1); <span style=\"color:green\">// Tilf�jer kanten e1 til grafen</span>\r\n                cost.Add(e1, 10);  <span style=\"color:green\">// Tildeler kanten e1 omkostningen 10. </span>\r\n\r\n                Edge&lt;<span style=\"color:blue\">int</span>&gt; e2 = <span style=\"color:blue\">new</span> Edge&lt;<span style=\"color:blue\">int</span>&gt;(0, 2);\r\n                graph.AddEdge(e2);\r\n                cost.Add(e2, 5);\r\n\r\n                <span style=\"color:green\">// Kanter som g�r ud af knude 1</span>\r\n                Edge&lt;<span style=\"color:blue\">int</span>&gt; e3 = <span style=\"color:blue\">new</span> Edge&lt;<span style=\"color:blue\">int</span>&gt;(1, 2);\r\n                graph.AddEdge(e3);\r\n                cost.Add(e3, 2);\r\n</pre>\r\n</div>\r\n<p>and so on there is no problems what so ever with compute metode. But now that i have extended the problem to take in a full section of the warehouse, the 2 arrays in the top, node array and edgecost array i get this error:&nbsp;</p>\r\n<p></p>\r\n<pre>System.Collections.Generic.KeyNotFoundException: Den givne n�gle var ikke til stede i ordbogen.\r\n   ved System.Collections.Generic.Dictionary`2.get_Item(TKey key)\r\n   ved QuickGraph.Algorithms.Search.BreadthFirstSearchAlgorithm`2.FlushVisitQueue()\r\n   ved QuickGraph.Algorithms.Search.BreadthFirstSearchAlgorithm`2.Visit(TVertexs)\r\n   ved QuickGraph.Algorithms.ShortestPath.DijkstraShortestPathAlgorithm`2.ComputeNoInit(TVertex s)\r\n   ved QuickGraph.Algorithms.ShortestPath.DijkstraShortestPathAlgorithm`2.ComputeFromRoot(TVertex rootVertex)\r\n   ved QuickGraph.Algorithms.ShortestPath.DijkstraShortestPathAlgorithm`2.InternalCompute()\r\n   ved QuickGraph.Algorithms.AlgorithmBase`1.Compute()\r\n   ved QuickGraph.Algorithms.RootedAlgorithmBase`2.Compute(TVertex rootVertex)\r\n   ved GraphExample.DijkstraExample.Main(String[] args) i C:\\Users\\Jonas\\Documents\\Visual Studio 2010\\Projects\\pla.cs:linje 139T\r\n</pre>\r\n<p></p>\r\n<p>The Danish part of the error means something like: The Given key where not in the Dictionary.</p>\r\n<p>Could someone help me avoid that error?</p>\r\n<p>/sajon</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-07-14T13:32:14.877-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "642661",
    "ThreadId": "265220",
    "Html": "<p>NVM i figured it out my self, it was an error in my arrays, 12 was not a vertex, since i counted first vertex from 0 to 11...</p>",
    "PostedDate": "2011-07-14T14:56:28.79-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]