{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "By desin:\n(please open different workitems for different issues, it's easier to track).\n.Source and .Target are not fields, they are properties. Thus we are avoiding to pay the price for this property call on each loop iteration.",
    "ClosedDate": "2009-04-16T20:09:35.337-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Why are 2 vars being created/assigned here, when Edge fields could just be passed directly?\nprivate bool ContainsEdgeBetweenVertices(IEnumerable<TEdge> edges, TEdge edge)\n        {\n            Contract.Requires(edges != null);\n            Contract.Requires(edge != null);\n \n            var source = edge.Source;\n            var target= edge.Target;\n            foreach (var e in edges)\n                if (this.EdgeEqualityComparer(e,source, target))\n \n                    return true;\n            return false;\n        }\n \nAnother, in QuickGraph.Algorithms.Condensation, CondensatedEdge is a poor name.  Perhaps CondensedEdge?\n \nLast, any idea why Silverlight hates Serializable?!?",
    "LastUpdatedDate": "2013-05-16T04:59:20.027-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "quickgraph",
    "ReportedDate": "2009-04-16T10:20:27.607-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Typo - EdgeEqualityComporer in UndirectedGraph.cs and..",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 13029
  },
  "FileAttachments": [],
  "Comments": []
}