{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2009-01-21T21:16:03.15-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "The GraphML schema allows user-defined data to be specified at the graph-level (a sibling of the edge and node list), as follows.\n \n<key ... />\n<graph>\n  <node/>\n  <edge/>\n  <data><key ... /></data>\n</graph>\n \nCould this be supported in QuickGraph without too much refactoring?",
    "LastUpdatedDate": "2013-05-16T04:59:23.7-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "quickgraph",
    "ReportedDate": "2009-01-21T12:22:01.16-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Serialization of GraphML <data> element as child <graph> node",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 12425
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I'm not sure offhand what the best model would be for a user to provide this data for serialization and then retrieve it during deserialization.  Deriving a from an existing graph data type, and providing properties with XmlAttribute might work, or exposing a hook into the serializer might work too.",
      "PostedDate": "2009-01-21T12:25:06.407-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-01-21T13:18:00.09-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Resolved with changeset 30493.",
      "PostedDate": "2009-01-21T21:16:03.15-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T17:44:51.827-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T04:59:23.7-07:00",
      "Id": -2147483648
    }
  ]
}