{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "By design: you need to add the vertices first or use AddVerticesAndEdge to add edges and their vertices.\n\nIn a debug build, you would get a nicer assert - but I only upload the release build.",
    "ClosedDate": "2009-01-26T08:00:42.873-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "I am getting this error for trying to add an edge to a Bidirectional graph.\n \nSystem.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.\n at System.ThrowHelper.ThrowKeyNotFoundException()\n at System.Collections.Generic.Dictionary`2.get_Item(TKey key)\n at QuickGraph.BidirectionalGraph`2.AddEdge(TEdge e)\n \nMy code is:\nthis.graph = new BidirectionalGraph<Vertex<int>, Edge<Vertex<int>>>(true);\n \nI created a  Vertex class for the X and Z values for the Key, and am using Edge<> for the value. I created the two verteces I want to use for the edge (Target and Source then addEdge(Edge<Vertex<int>> e)), yet I get a Key not found error.\n \nFor QuickGraph v3.2.40122",
    "LastUpdatedDate": "2013-05-16T04:59:23.563-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "quickgraph",
    "ReportedDate": "2009-01-26T05:54:38.033-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "BidirectionalGraph KeyNotFoundException errror",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 12469
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thanks. Also I have accidentally added repeat posts.",
      "PostedDate": "2009-01-26T11:45:23.163-08:00",
      "Id": -2147483648
    },
    {
      "Message": "I do add the vertices first but i will try AddVerticesAndEdge.",
      "PostedDate": "2009-01-26T11:46:24.07-08:00",
      "Id": -2147483648
    },
    {
      "Message": "I have tried AddVerticesAndEdge() and it works to a point. There seems to be a bug.\r\nIt retains the amount of edges and vertices added but labels them all with the last edge only.",
      "PostedDate": "2009-01-26T18:54:32.46-08:00",
      "Id": -2147483648
    },
    {
      "Message": "\"It retains the amount of edges and vertices added but labels them all with the last edge only.\"\r\nI'm not sure what you mean. Please provide a repro test case that I can investigate.",
      "PostedDate": "2009-01-27T08:40:58.13-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Here is a link to an unstable source release of this on the SmartMap page.\r\nhttp://www.codeplex.com/smartmap/Release/ProjectReleases.aspx?ReleaseId=22524\r\n\r\nIt should give a readout of what to do in the console. The log file is in the bin directory. I hope this helps.",
      "PostedDate": "2009-01-29T10:32:56.543-08:00",
      "Id": -2147483648
    },
    {
      "Message": "It does not help. Please provide a self-contained repro test case.",
      "PostedDate": "2009-01-29T14:49:52.08-08:00",
      "Id": -2147483648
    },
    {
      "Message": "There are two project test cases along with the QuickGraph projects here\r\n(ErrorKeyNotFound and ErrorRepeatEdges projects):\r\n\r\nhttp://www.thinkresults.com/mark1/testcase/quickgraph_errors.zip\r\n\r\n",
      "PostedDate": "2009-01-30T11:54:51.497-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Please post the repro test cases only, not the full 5Mb source. The problem is that Vertex<T> is a class, if you want your sample to work as is you need to either (1) turn vertex into a struct, (2) have Vertex implement IEquatable<Vertex<T>>.",
      "PostedDate": "2009-01-30T18:19:14.16-08:00",
      "Id": -2147483648
    },
    {
      "Message": "It worked great. Just brushing up on my .NET skills. Thanks. ",
      "PostedDate": "2009-02-01T14:43:30.4-08:00",
      "Id": -2147483648
    },
    {
      "Message": "No problem. I suspected that from the beginning. Providing a isolated repro test case would have caught this much earlier ;)",
      "PostedDate": "2009-02-01T22:54:34.047-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T17:44:51.64-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T04:59:23.563-07:00",
      "Id": -2147483648
    }
  ]
}