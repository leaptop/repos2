 	mscorlib.dll!System.ThrowHelper.ThrowKeyNotFoundException() + 0x24 bytes	
 	mscorlib.dll!System.Collections.Generic.Dictionary<System.__Canon,System.__Canon>.this[System.__Canon].get(System.__Canon key) + 0x4c bytes	
 	GraphSharp.Controls.dll!GraphSharp.Controls.GraphLayout<*my_namespace*.IVertex,*my_namespace*.IEdge,QuickGraph.IBidirectionalGraph<*my_namespace*.IVertex,*my_namespace*.IEdge>>.CreateEdgeControl(*my_namespace*.IEdge edge = SameSiteEdge Input = "JXBG-S1-2512", Output = "JXBG-S13-2512") + 0x1c4 bytes	
 	GraphSharp.Controls.dll!GraphSharp.Controls.GraphLayout<*my_namespace*.IVertex,*my_namespace*.IEdge,QuickGraph.IBidirectionalGraph<*my_namespace*.IVertex,*my_namespace*.IEdge>>.OnMutation() + 0x313 bytes	
 	GraphSharp.Controls.dll!GraphSharp.Controls.GraphLayout<*my_namespace*.IVertex,*my_namespace*.IEdge,QuickGraph.IBidirectionalGraph<*my_namespace*.IVertex,*my_namespace*.IEdge>>.DoNotificationLayout.AnonymousMethod__24(object s = {System.ComponentModel.BackgroundWorker}, System.ComponentModel.RunWorkerCompletedEventArgs e = {System.ComponentModel.RunWorkerCompletedEventArgs}) + 0x51 bytes	
 	WindowsBase.dll!System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate callback, object args, bool isSingleParameter) + 0x1a7 bytes	
 	WindowsBase.dll!System.Windows.Threading.ExceptionWrapper.TryCatchWhen(object source = {System.Windows.Threading.Dispatcher}, System.Delegate callback, object args, bool isSingleParameter, System.Delegate catchHandler = null) + 0x4c bytes	
 	WindowsBase.dll!System.Windows.Threading.DispatcherOperation.InvokeImpl() + 0xc0 bytes	
 	mscorlib.dll!System.Threading.ExecutionContext.runTryCode(object userData) + 0x178 bytes	
 	[Native to Managed Transition]	
 	[Managed to Native Transition]	
 	mscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state) + 0x62 bytes	
 	WindowsBase.dll!System.Windows.Threading.DispatcherOperation.Invoke() + 0x6a bytes	
 	WindowsBase.dll!System.Windows.Threading.Dispatcher.ProcessQueue() + 0x2b0 bytes	
 	WindowsBase.dll!System.Windows.Threading.Dispatcher.WndProcHook(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled) + 0xb4 bytes	
 	WindowsBase.dll!MS.Win32.HwndWrapper.WndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled) + 0xce bytes	
 	WindowsBase.dll!MS.Win32.HwndSubclass.DispatcherCallbackOperation(object o) + 0x96 bytes	
 	WindowsBase.dll!System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate callback, object args, bool isSingleParameter) + 0xec bytes	
 	WindowsBase.dll!System.Windows.Threading.ExceptionWrapper.TryCatchWhen(object source = {System.Windows.Threading.Dispatcher}, System.Delegate callback, object args, bool isSingleParameter, System.Delegate catchHandler = null) + 0x4c bytes	
 	WindowsBase.dll!System.Windows.Threading.Dispatcher.InvokeImpl(System.Windows.Threading.DispatcherPriority priority, System.TimeSpan timeout, System.Delegate method, object args, bool isSingleParameter) + 0xde bytes	
 	WindowsBase.dll!MS.Win32.HwndSubclass.SubclassWndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam) + 0x177 bytes	
 	[Native to Managed Transition]	
 	[Managed to Native Transition]	
 	WindowsBase.dll!System.Windows.Threading.Dispatcher.TranslateAndDispatchMessage(ref System.Windows.Interop.MSG msg) + 0x46 bytes	
 	WindowsBase.dll!System.Windows.Threading.Dispatcher.PushFrameImpl(System.Windows.Threading.DispatcherFrame frame) + 0xf1 bytes	
 	WindowsBase.dll!System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan timeout) + 0x86 bytes	
 	WindowsBase.dll!System.Windows.Threading.Dispatcher.InvokeImpl(System.Windows.Threading.DispatcherPriority priority, System.TimeSpan timeout, System.Delegate method, object args, bool isSingleParameter) + 0x128 bytes	
 	WindowsBase.dll!System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback d, object state) + 0x43 bytes	
 	Microsoft.Practices.CompositeUI.dll!Microsoft.Practices.CompositeUI.EventBroker.Subscription.CallOnUserInterface(object sender = {Eterra.Apf.Services.Viewport.Wpf.ViewportWrapperWpf}, System.EventArgs e = {System.EventArgs}, System.Collections.Generic.List<System.Exception> exceptions = Count = 0) Line 222 + 0x63 bytes	C#
 	Microsoft.Practices.CompositeUI.dll!Microsoft.Practices.CompositeUI.EventBroker.Subscription.EventTopicFireHandler(object sender = {Eterra.Apf.Services.Viewport.Wpf.ViewportWrapperWpf}, System.EventArgs e = {System.EventArgs}, System.Collections.Generic.List<System.Exception> exceptions = Count = 0, System.Diagnostics.TraceSource traceSource = {System.Diagnostics.TraceSource}) Line 170 + 0x19 bytes	C#
 	Microsoft.Practices.CompositeUI.dll!Microsoft.Practices.CompositeUI.EventBroker.EventTopic.CallSubscriptionHandlers(object sender = {Eterra.Apf.Services.Viewport.Wpf.ViewportWrapperWpf}, System.EventArgs e = {System.EventArgs}, Microsoft.Practices.CompositeUI.EventBroker.EventTopicFireDelegate[] handlers = {Microsoft.Practices.CompositeUI.EventBroker.EventTopicFireDelegate[1]}) Line 423 + 0x37 bytes	C#
 	Microsoft.Practices.CompositeUI.dll!Microsoft.Practices.CompositeUI.EventBroker.EventTopic.Fire(object sender = {Eterra.Apf.Services.Viewport.Wpf.ViewportWrapperWpf}, System.EventArgs e = {System.EventArgs}, Microsoft.Practices.CompositeUI.WorkItem workItem = {Eterra.Apf.Services.Viewport.ViewportWorkItem}, Microsoft.Practices.CompositeUI.EventBroker.PublicationScope scope = Global) Line 245 + 0x6a bytes	C#
 	Microsoft.Practices.CompositeUI.dll!Microsoft.Practices.CompositeUI.EventBroker.EventTopic.Fire(Microsoft.Practices.CompositeUI.EventBroker.Publication publication = {Microsoft.Practices.CompositeUI.EventBroker.Publication}, object sender = {Eterra.Apf.Services.Viewport.Wpf.ViewportWrapperWpf}, System.EventArgs e = {System.EventArgs}) Line 526 + 0x91 bytes	C#
 	Microsoft.Practices.CompositeUI.dll!Microsoft.Practices.CompositeUI.EventBroker.Publication.PublicationHandler(object sender = {Eterra.Apf.Services.Viewport.Wpf.ViewportWrapperWpf}, System.EventArgs e = {System.EventArgs}) Line 86 + 0x2f bytes	C#
 	Eterra.Apf.Services.dll!Eterra.Apf.Services.Viewport.Wpf.ViewportWrapperWpf.viewport_Activated(object sender = {Eterra.Apf.Services.Viewport.Wpf.ViewportWpf}, System.EventArgs e = {System.EventArgs}) Line 596 + 0x23 bytes	C#
 	PresentationFramework.dll!System.Windows.Window.OnActivated(System.EventArgs e) + 0xb8 bytes	
 	Eterra.Apf.Services.dll!Eterra.Apf.Services.Viewport.Wpf.ViewportWpf.OnActivated(System.EventArgs e = {System.EventArgs}) Line 483 + 0xf bytes	C#
 	PresentationFramework.dll!System.Windows.Window.WmActivate(System.IntPtr wParam) + 0x48 bytes	
 	PresentationFramework.dll!System.Windows.Window.WindowFilterMessage(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled) + 0x17c bytes	
 	PresentationCore.dll!System.Windows.Interop.HwndSource.PublicHooksFilterMessage(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled) + 0xa4 bytes	
 	WindowsBase.dll!MS.Win32.HwndWrapper.WndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled) + 0xce bytes	
 	WindowsBase.dll!MS.Win32.HwndSubclass.DispatcherCallbackOperation(object o) + 0x96 bytes	
 	WindowsBase.dll!System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate callback, object args, bool isSingleParameter) + 0xec bytes	
 	WindowsBase.dll!System.Windows.Threading.ExceptionWrapper.TryCatchWhen(object source = {System.Windows.Threading.Dispatcher}, System.Delegate callback, object args, bool isSingleParameter, System.Delegate catchHandler = null) + 0x4c bytes	
 	WindowsBase.dll!System.Windows.Threading.Dispatcher.InvokeImpl(System.Windows.Threading.DispatcherPriority priority, System.TimeSpan timeout, System.Delegate method, object args, bool isSingleParameter) + 0xde bytes	
 	WindowsBase.dll!MS.Win32.HwndSubclass.SubclassWndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam) + 0x177 bytes	
 	[Native to Managed Transition]	
 	[Managed to Native Transition]	
 	System.Windows.Forms.dll!System.Windows.Forms.NativeWindow.DefWndProc(ref System.Windows.Forms.Message m) + 0x9f bytes	
 	Eterra.Apf.Services.dll!Eterra.Apf.Services.Viewport.Wpf.ViewportWpf.ViewportWpfHiddenWindow.WndProc(ref System.Windows.Forms.Message m = {System.Windows.Forms.Message}) Line 1404 + 0x13 bytes	C#
 	System.Windows.Forms.dll!System.Windows.Forms.NativeWindow.DebuggableCallback(System.IntPtr hWnd, int msg = 6, System.IntPtr wparam, System.IntPtr lparam) + 0xad bytes	
 	[Native to Managed Transition]	
 	[Managed to Native Transition]	
 	WindowsBase.dll!System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[] waitHandles, bool waitAll, int millisecondsTimeout) + 0x29 bytes	
 	[Native to Managed Transition]	
 	[Managed to Native Transition]	
 	GraphSharp.Controls.dll!GraphSharp.Controls.GraphLayout<*my_namespace*.IVertex,*my_namespace*.IEdge,QuickGraph.IBidirectionalGraph<*my_namespace*.IVertex,*my_namespace*.IEdge>>.DoNotificationLayout() + 0x5b bytes	
 	GraphSharp.Controls.dll!GraphSharp.Controls.GraphLayout<*my_namespace*.IVertex,*my_namespace*.IEdge,QuickGraph.IBidirectionalGraph<*my_namespace*.IVertex,*my_namespace*.IEdge>>.OnMutableGraph_EdgeAdded(*my_namespace*.IEdge edge = SameSiteEdge Input = "JXBG-S1-2512", Output = "JXBG-S13-2512") + 0x58 bytes	
 	[Native to Managed Transition]	
 	[Managed to Native Transition]	
 	QuickGraph.dll!QuickGraph.BidirectionalGraph<*my_namespace*.IVertex,*my_namespace*.IEdge>.OnEdgeAdded(*my_namespace*.IEdge args = SameSiteEdge Input = "JXBG-S1-2512", Output = "JXBG-S13-2512") + 0x58 bytes	
 	QuickGraph.dll!QuickGraph.BidirectionalGraph<*my_namespace*.IVertex,*my_namespace*.IEdge>.AddEdge(*my_namespace*.IEdge e = SameSiteEdge Input = "JXBG-S1-2512", Output = "JXBG-S13-2512") + 0x47e bytes	
