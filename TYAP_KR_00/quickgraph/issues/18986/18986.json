{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "QuickGraph is bad ass! I may have found an error though... Anything thoughts are would be greatly appreciated Thanks!\n \n \nThe following code and XML works perfectly in .NET 4 but fails in Silverlight 4. The code will compile in SL4, but silently fails during run time.\n \n<?xml version=\"1.0\" encoding=\"utf-16\"?>\n<graphml xmlns=\"http://graphml.graphdrawing.org/xmlns\">\n  <graph id=\"G\" edgedefault=\"directed\" parse.nodes=\"2\" parse.edges=\"1\" parse.order=\"nodesfirst\" parse.nodeids=\"free\" parse.edgeids=\"free\">\n    <node id=\"vertex0\" />\n    <node id=\"vertex1\" />\n    <edge id=\"edge1\" source=\"vertex0\" target=\"vertex1\" />\n  </graph>\n</graphml>\n \nprivate string GraphToXml(FlockGraph graph)\n{\n    StringBuilder sb = new StringBuilder();\n \n    using (XmlWriter writer = XmlWriter.Create(sb))\n    {\n        var serializer = new GraphMLSerializer<FlockVertex, FlockEdge, FlockGraph>();\n        serializer.Serialize(writer, graph, v => v.ID, e => e.ID);\n        writer.Flush();\n    }\n \n    return sb.ToString();\n}\n \nprivate FlockGraph XmlToGraph(string XmlGraph)\n{\n    FlockGraph graph = new FlockGraph();\n \n    using (XmlReader reader = XmlReader.Create(new StringReader(XmlGraph)))\n    {\n        var serializer = new GraphMLDeserializer<FlockVertex, FlockEdge, FlockGraph>();\n \n        serializer.Deserialize(reader, graph,\n                                id => new FlockVertex(id),\n                                (source, target, id) => new FlockEdge(source, target));\n    }\n \n    return graph;\n}",
    "LastUpdatedDate": "2013-02-21T17:44:40.2-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "quickgraph",
    "ReportedDate": "2010-10-21T22:24:27.733-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "GraphML Serialization in Silverlight Runtime Error",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 18986
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "ouch the serializer uses features that are not supported on sl.",
      "PostedDate": "2010-11-07T05:08:18.71-08:00",
      "Id": -2147483648
    },
    {
      "Message": "I ended up writing a quick and dirty custom deserializer. I found one major difference in how SL differs from .NET as far XML; in SL you have to explicitly say “MoveToElement” when reading element content. In .NET you can just write GetConent or whatever the .NET method is called. \r\n...\r\nreader.MoveToElement();\r\n        XmlReader inner = reader.ReadSubtree();\r\n        while (inner.Read())\r\n        {\r\n        \tif (inner.Name == \"data\") //Custom Attributes\r\n               {\r\n               if (inner.HasAttributes)\r\n               {\r\n\twhile (inner.MoveToNextAttribute())\r\n                        {\r\n                        \tif (inner.Name == \"key\")\r\n                                {\r\n                                \tif (inner.Value == \"Name\")\r\n                                        {\r\n                                        \tinner.MoveToElement(); // <<<---- Explicitly Move Reader In SL\r\n                                                name = inner.ReadElementContentAsString();\r\n                                        }\r\n...\r\n\r\npelikhan, \r\nI saw that you where working on the BronKerboshMaximumCliqueAlgorithm class, do you have a ball park ETA on that? \r\n",
      "PostedDate": "2010-11-08T03:05:06.9-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T17:44:40.2-08:00",
      "Id": -2147483648
    }
  ]
}