{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2009-03-29T09:30:40.16-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Consider code\n \nusing System;\nusing System.Collections.Generic;\nusing QuickGraph;\nusing QuickGraph.Algorithms;\n \nnamespace QuickGraphDemoHelper\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            BidirectionalGraph<int, Edge<int>> graph = new BidirectionalGraph<int,Edge<int>>();\n            int vertex = 1;\n            graph.AddVerticesAndEdge(new Edge<int>(vertex, vertex));\n            var pathFinder = AlgorithmExtensions.ShortestPathsBellmanFord<int, Edge<int>>(graph, edge => -1.0, vertex);\n            IEnumerable<Edge<int>> path;\n            pathFinder(vertex, out path);\n        }\n    }\n}\n \nIt causes OutOfMemoryException, because of negative cycle in the graph. It would be great to take into account such situation in method AlgorithmExtensions.ShortestPathBelmanFord",
    "LastUpdatedDate": "2013-05-16T04:59:21.283-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "quickgraph",
    "ReportedDate": "2009-03-29T01:36:12.893-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Infinite cycle",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 12901
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Resolved with changeset 32649.",
      "PostedDate": "2009-03-29T09:30:40.16-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T17:44:48.94-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T04:59:21.283-07:00",
      "Id": -2147483648
    }
  ]
}